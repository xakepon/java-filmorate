DROP TABLE IF EXISTS genres, MPA_ids, film, motion_picture_association, film_genres, users, likes, friends;

CREATE TABLE IF NOT EXISTS genres (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    genre_name varchar
);

INSERT INTO genres (genre_name) VALUES
        ('Комедия'),
        ('Драма'),
        ('Мультфильм'),
        ('Триллер'),
        ('Документальный'),
        ('Боевик');

CREATE TABLE IF NOT EXISTS motion_picture_association (
    MPA_id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    MPA_name varchar
);

INSERT INTO motion_picture_association (MPA_name) VALUES
        ('G'),
        ('PG'),
        ('PG-13'),
        ('R'),
        ('NC-17');


CREATE TABLE IF NOT EXISTS film (
    film_id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    name varchar,
    description varchar,
    release_date timestamp,
    duration integer,
    MPA_id integer
);

CREATE TABLE IF NOT EXISTS MPA_ids (
    film_id integer,
    mpa_id integer,
    FOREIGN KEY (film_id) REFERENCES film (film_id),
    FOREIGN KEY (mpa_id) REFERENCES motion_picture_association (mpa_id)

);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id integer,
    genre_id integer,
    FOREIGN KEY (genre_id) REFERENCES genres (genre_id),
    FOREIGN KEY (film_id) REFERENCES film (film_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    email varchar,
    login varchar,
    name varchar,
    birthday timestamp
);

CREATE TABLE IF NOT EXISTS likes (
    film_id integer,
    user_id integer,
    FOREIGN KEY (film_id) REFERENCES film (film_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    UNIQUE(film_id,user_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id integer,
    friends_id integer,
    status varchar,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    UNIQUE (user_id, friends_id, status)
);